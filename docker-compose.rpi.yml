# Docker Compose for Raspberry Pi deployment
version: '3.8'

services:
  # for database
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_DB=easyxdb
      - POSTGRES_USER=easyx
      - POSTGRES_PASSWORD=easyxpass
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U easyx -d easyxdb" ]
      interval: 5s
      timeout: 3s
      retries: 10

  easyx-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      # for database
      - DATABASE_URL=postgresql+psycopg2://easyx:easyxpass@postgres:5432/easyxdb
    volumes:
      # Mount for persistent data if needed
      - ./data:/app/data
      # Mount for PDF processing
      - ./uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - easyx-app
    restart: unless-stopped
    profiles:
      - production

volumes:
  pgdata: